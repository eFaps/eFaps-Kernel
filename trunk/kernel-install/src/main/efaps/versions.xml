<?xml version="1.0" encoding="UTF-8"?>

<!--

  Copyright 2003 - 2009 The eFaps Team

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  Author:          The eFaps Team
  Revision:        $Rev$
  Last Changed:    $Date$
  Last Changed By: $Author$

-->

<install xmlns="http://www.efaps.org/xsd"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.efaps.org/xsd http://www.efaps.org/xsd/eFaps_1.0.xsd">
    <application>eFaps-Kernel</application>
    <version number="1" reloadCache="false" login="false">
        <description>Create base SQL tables and views.</description>
        <lifecyle>
            <ignore step="EFAPS_CREATE" />
            <ignore step="EFAPS_UPDATE" />
            <ignore step="DBPROPERTIES_UPDATE" />
        </lifecyle>
        <script type="rhino" name="org/efaps/installations/eFaps-Kernel/CreateAll.js" function="eFapsCreateAll()" />
    </version>
    <version number="2" reloadCache="true">
        <description>Install SQL Tables.</description>
        <lifecyle>
            <ignore step="DBPROPERTIES_UPDATE" />
        </lifecyle>
    </version>
    <version number="3" reloadCache="true">
        <description>Install complete Data Model</description>
        <lifecyle>
            <ignore step="DBPROPERTIES_UPDATE" />
        </lifecyle>
    </version>
    <version number="4" reloadCache="true">
        <description>Install Access Types, Access Sets and Users. Install all Stores. Update types containing stores. </description>
        <lifecyle>
            <ignore step="DBPROPERTIES_UPDATE" />
        </lifecyle>
    </version>
    <version number="5" reloadCache="false" login="false">
        <description>Update Password of Administrator and Activate Administrator and Administration Role.</description>
        <lifecyle>
            <ignore step="DBPROPERTIES_UPDATE" />
        </lifecyle>
        <script type="groovy">
            import org.efaps.admin.datamodel.Type;
            import org.efaps.db.Context;
            import org.efaps.db.Update;

            EFAPS_LOGGER.info("    Update '" + EFAPS_USERNAME + "' Password");
            Context.getThreadContext().getPerson().setPassword(EFAPS_PASSWORD);

            EFAPS_LOGGER.info("    Activate Person '" + EFAPS_USERNAME + "'");
            Update update1 = new Update(Type.get("Admin_User_Abstract"), "1");
            update1.add("Status","true");
            update1.executeWithoutAccessCheck();

            EFAPS_LOGGER.info("    Setting default TimeZone, Chronology and Locale for  Person '" + EFAPS_USERNAME + "'");
            Update update2 = new Update(Type.get("Admin_User_Person"), "1");
            update2.add("TimeZone","UTC");
            update2.add("Language","1");
            update2.add("Chronology","ISO8601");
            update2.add("Locale","en_US");
            update2.executeWithoutAccessCheck();

            EFAPS_LOGGER.info("    Activate Role 'Administration'");
            Update update3 = new Update(Type.get("Admin_User_Abstract"), "2");
            update3.add("Status","true");
            update3.executeWithoutAccessCheck();
        </script>
    </version>
    <version number="6" compile="true">
        <description>Import Data</description>
        <script type="groovy">
            import java.io.File;
            import org.efaps.admin.user.JAASSystem;
            import org.efaps.admin.user.Role;
            import org.efaps.importer.DataImport;
            import org.efaps.db.Context;
            import org.efaps.db.SearchQuery;

            // import languages (if not already exists...)
            EFAPS_LOGGER.info("    Check if Languages must be imported");
            SearchQuery query1 = new SearchQuery();
            query1.setQueryTypes("Admin_Language");
            query1.addWhereExprEqValue("Language", "en");
            query1.addSelect("OID");
            query1.execute();
            if (!query1.next()) {
                DataImport.readFile(new URL(EFAPS_ROOTURL, "org/efaps/installations/eFaps-Kernel/Data/IMPORT_Language.xml"))
                          .updateInDB();
            }

            // import person 2 role (if not already exists...)
            EFAPS_LOGGER.info("    Check if Person 2 Role must be imported");
            SearchQuery query2 = new SearchQuery();
            query2.setQueryTypes("Admin_User_Person2Role");
            query2.addWhereExprEqValue("UserFromLink",   Context.getThreadContext().getPerson().getId());
            query2.addWhereExprEqValue("UserToLink",     Role.getRole("Common_Main_PwdChg").getId());
            query2.addWhereExprEqValue("UserJAASSystem", JAASSystem.getJAASSystem("eFaps").getId());
            query2.addSelect("OID");
            query2.execute();
            if (!query2.next()) {
                DataImport.readFile(new URL(EFAPS_ROOTURL, "org/efaps/installations/eFaps-Kernel/Data/IMPORT_PersonToRole.xml"))
                          .updateInDB();
            }

            // import run level for the web application (if not already exists...)
            EFAPS_LOGGER.info("    Check if Run Level webapp must be imported");
            SearchQuery query3 = new SearchQuery();
            query3.setQueryTypes("Admin_RunLevel_RunLevel");
            query3.addWhereExprEqValue("UUID", "590ba27b-26eb-4bdf-ac30-1e1704c5f557");
            query3.addSelect("OID");
            query3.execute();
            if (!query3.next()) {
                DataImport.readFile(new URL(EFAPS_ROOTURL, "org/efaps/installations/eFaps-Kernel/Data/IMPORT_Webapp_RunLevel.xml"))
                          .updateInDB();
            }
    </script>
    </version>
</install>
